---
- name: pi | disable wifi
  lineinfile:
    path: /boot/config.txt
    line: dtoverlay=pi3-disable-wifi

- name: pi | disable bluetooth
  lineinfile:
    path: /boot/config.txt
    line: dtoverlay=pi3-disable-bt

- name: pi | set PoE fan threshold 0
  lineinfile:
    path: /boot/config.txt
    line: dtparam=poe_fan_temp0=65000,poe_fan_temp0_hyst=5000

- name: pi | set PoE fan threshold 1
  lineinfile:
    path: /boot/config.txt
    line: dtparam=poe_fan_temp1=77000,poe_fan_temp1_hyst=2000

- name: Create /opt/bin
  file:
    path: /opt/bin
    state: directory

- name: Pi-Hole Exporter | Download binary
  get_url:
    url: https://github.com/eko/pihole-exporter/releases/latest/download/pihole_exporter-linux-arm
    dest: /opt/bin/pihole_exporter
    mode: 755

- name: Pi-Hole Exporter | Install systemd unit
  template:
    src: pihole_exporter.service.j2
    dest: /etc/systemd/system/pihole_exporter.service
    mode: 644

- name: Pi-Hole Exporter | Enable and start service
  service:
    name: pihole_exporter.service
    state: started
    enabled: yes

- name: Install custom dnsmasq config
  template:
    src: dnsmasq-custom.conf.j2
    dest: /etc/dnsmasq.d/05-custom.conf
  notify:
    - restart dns

- name: cloudflared | install
  unarchive:
    src: https://bin.equinox.io/c/VdrWdbjqyF/cloudflared-stable-linux-arm.tgz
    creates: /opt/bin/cloudflared
    remote_src: yes
    dest: /opt/bin
    mode: 755

- name: cloudflared | configuration
  copy:
    dest: /etc/default/cloudflared
    content: >
      CLOUDFLARED_OPTS=--port 5053
      --upstream https://1.1.1.1/dns-query
      --upstream https://1.0.0.1/dns-query
      --upstream https://9.9.9.9/dns-query

- name: cloudflared | install systemd service
  template:
    src: cloudflared.service.j2
    dest: /etc/systemd/system/cloudflared.service

- name: cloudflared | enable and start service
  service:
    name: cloudflared.service
    state: started
    enabled: yes
